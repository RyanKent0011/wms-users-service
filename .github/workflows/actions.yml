name: Run Test, Quality and Release
on:
  push:
    branches:
      - '*'
    paths-ignore:
      - '**/CHANGELOG.md'
permissions:
  contents: write
  pull-requests: write

jobs:
  testJest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        node-version: [ 16, 18, 20 ]
    timeout-minutes: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Create MongoDB Docker Container
        run: sudo docker run -d -p 27017:27017 -v $(pwd)/test/Resources/MongoDB:/data mongo:latest
      - name: Add data to userColl collection
        run: |
          container_id=$(docker ps -q --filter ancestor=mongo:latest)
          sleep 10  
          if ! docker exec "$container_id" \
          mongoimport --collection=User --db=WMS --file=/data/WMS.User.json; then
            echo "Errore durante l'importazione, interrompiamo lo script"
            exit 1
          fi
        env:
          DB_NAME: "WMS"
          DB_CONN_STRING: "mongodb://127.0.0.1:27017"
          USER_COLLECTION: "User"
      - name: Install Dependencies
        run: npm install
      - name: Run Tests
        run: npm test
      - name: Stop and Remove MongoDB Docker Container
        run: |
          container_id=$(docker ps -q --filter ancestor=mongo:latest)
          docker stop "$container_id"
          docker rm "$container_id"
      

  sonarCloudCheck:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: testJest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release-please:
    runs-on: ubuntu-latest
    needs: testJest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: google-github-actions/release-please-action@v4
        with:
          token: ${{ secrets.GIT_TOKEN }}
          release-type: simple